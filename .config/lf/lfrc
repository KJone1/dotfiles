#-----------------------------------------------------------
#-- General
#-----------------------------------------------------------
set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10 # leave some space at the top and the bottom of the screen
set cursorpreviewfmt ""
set drawbox
set icons
set ratios 1:1 # Use 2 panes instead of 3
set dircounts
set info size

#-----------------------------------------------------------
#-- Keymaps
#-----------------------------------------------------------

map S shell # use S for shell commands
map T $$SHELL # use T to open terminal
map q quit
map <esc> quit
map <enter> open
map ` !true # show the result of execution of previous commands
map . set hidden! # Show hidden files using .
map x $$f # execute current file (must be executable)
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f
map gl follow_link
map gd cd ~/DEV/dotfiles
map gc cd ~/.config/lf
map gt cd ~/.trash
map d trash
map D delete
map A :push %mkdir<space>
map a :push %touch<space>
map c unselect
map C clear
map E nvim_here

#-----------------------------------------------------------
#-- Commands
#-----------------------------------------------------------

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
  case $(file --mime-type -Lb $f) in
    text/*) lf -remote "send $id \$$EDITOR \$fx";;
    *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
  esac
}}

# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

cmd delete ${{
  set -f
  $HOME/.config/lf/scripts/cowDelete.sh $fx
}}

cmd trash ${{
  set -f
  $HOME/.config/lf/scripts/cowDelete.sh -t $fx
}}

cmd move ${{
  set -f
  dest=$1
  mv $fx $dest
}}
# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
  set -f
  case $f in
    *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
    *.tar.gz|*.tgz) tar xzvf $f;;
    *.tar.xz|*.txz) tar xJvf $f;;
    *.zip) unzip $f;;
    *.rar) unrar x $f;;
    *.7z) 7z x $f;;
  esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
  set -f
  mkdir $1_
  cp -r $fx $1_
  tar czf $1.tar.gz -C $1_ .
  rm -rf $1_
}}

# compress current file or selected files with zip
cmd zip ${{
  set -f
  mkdir $1_
  cp -r $fx $1_
  (cd $1_ && zip -r $1.zip . && cd -)
  rm -rf $1_
}}

cmd follow_link %{{
  lf -remote "send ${id} select '$(readlink $f)'"
}}

cmd nvim_here ${{
  nvim -c ":Neotree" $PWD
}}
